---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: jenkins
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: jenkins
    spec:
      containers:
        - name: jenkins
          # image: aksacrphxapp.azurecr.io/lgi-jenkins:1.0
          image: jenkins/jenkins:lts
          env:
            - name: JAVA_OPTS
              value: -Djenkins.install.runSetupWizard=false
            - name: jenkins_home
              value: jenkins-home
          ports:
            - name: http-port
              containerPort: 8080
            - name: jnlp-port
              containerPort: 50000
          volumeMounts:
          - name: jenkins
            mountPath: /var/jenkins_home
            subPath: data
      imagePullSecrets:
      - name: acr
      volumes:
        - name: jenkins
          persistentVolumeClaim:
            claimName: pvc-jenkins

#service#
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    service.beta.kubernetes.io/azure-load-balancer-internal: "true"
  labels:
    app: jenkins-svc
  name: jenkins-svc
spec:
  ports:
  - name: jenkins
    port: 80
    targetPort: 8080
  selector:
    app: jenkins
  type: LoadBalancer
  # loadBalancerIP: 10.140.3.237

---
apiVersion: v1
kind: PersistentVolume
metadata:
  annotations:
    volume.beta.kubernetes.io/storage-provisioner: kubernetes.io/azure-disk
  labels:
    app: jenkins
    role: data
  name: pv-jenkins
spec:
  storageClassName: default
  capacity:
    storage: 10Gi
  accessModes:
    - ReadWriteMany
  azureFile:
    secretName: coredevopsstorage-fileshare
    shareName: jenkins
    readOnly: false
  # mountOptions:
  #   - uid=1
  #   - gid=1
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: pvc-jenkins
spec:
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 10Gi
  volumeName: pv-jenkins